---
import { styleReset } from "react95";
import { config } from "../config";

import { Taskbar } from "../react-islands/Taskbar";

export interface Props {
  title: string;
  description?: string;
  canonicalUrl?: string;
}

const { title, description = "", canonicalUrl } = Astro.props;

const domain = new URL(Astro.site ?? "").hostname;
const { sentryDsn, sentryRelease } = config.urls;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/png"
      sizes="64x64"
      href="/images/iconMastodon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="256x256"
      href="/images/iconMastodon256.png"
    />
    <link rel="apple-touch-icon" href="/images/AppleTouchIcon.png" />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>
    <meta name="description" content={description} />
    {canonicalUrl ? <link rel="canonical" href={canonicalUrl} /> : undefined}

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta
      property="og:image"
      content={new URL("/images/splash@4x.png", Astro.url)}
    />
    <meta
      property="og:image:alt"
      content="Wes Souza’s Mastodon Flock for Windows 95 Version 1.0"
    />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta
      property="twitter:image"
      content={new URL("/images/splash@4x.png", Astro.url)}
    />
    <meta
      property="twitter:image:alt"
      content="Wes Souza’s Mastodon Flock for Windows 95 Version 1.0"
    />

    {
      domain !== "localhost" ? (
        <script
          defer
          data-domain={domain}
          src="https://plausible.io/js/plausible.js"
        />
      ) : null
    }
    <script>
      window.plausible =
        window.plausible ||
        function () {
          (window.plausible.q = window.plausible.q || []).push(arguments);
        };
    </script>

    <style set:html={styleReset}></style>
  </head>
  <body data-dsn={sentryDsn} data-release={sentryRelease}>
    <main>
      <slot />
    </main>
    <Taskbar client:only="react" />

    <script>
      import * as Sentry from "@sentry/browser";
      import { CaptureConsole } from "@sentry/integrations";

      const dsn = (document.querySelector("[data-dsn]") as HTMLElement)?.dataset
        .dsn;
      const release = (document.querySelector("[data-release]") as HTMLElement)
        ?.dataset.release;

      if (dsn && release) {
        Sentry.init({
          dsn,
          integrations: [
            new Sentry.BrowserTracing(),
            new Sentry.Replay(),
            new CaptureConsole({
              levels: ["error"],
            }),
          ],
          tracesSampleRate: 0.2,
          release,
        });
      }
    </script>
  </body>
</html>

<style>
  :root {
    --taskbar-height: 52px;
  }

  html {
    width: 100%;
    height: 100%;
    font-size: 1em;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  body {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
      Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
      sans-serif;
    background-color: teal;
  }

  main {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    width: 100%;
    padding-block-end: var(--taskbar-height);
    z-index: 1;
  }

  @media (max-height: 767px) {
    main {
      justify-content: flex-start;
    }
  }

  @media (min-height: 768px) {
    main {
      height: calc(100vh - var(--taskbar-height));
    }
  }

  @media print {
    main {
      justify-content: flex-start;
      height: auto;
    }
  }
</style>
